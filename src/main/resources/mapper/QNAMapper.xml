<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aurora.dao.QNAMapper">
  <resultMap id="BaseResultMap" type="com.aurora.domain.QNA">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Q" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="A" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="B" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="C" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="D" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="answer" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="right" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="wrong" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, Q, A, B, C, D, answer, right, wrong
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from q&a
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from q&a
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aurora.domain.QNA">
    insert into q&a (id, Q, A, B, 
      C, D, answer, right, 
      wrong)
    values (#{id,jdbcType=INTEGER}, #{q,jdbcType=VARCHAR}, #{a,jdbcType=VARCHAR}, #{b,jdbcType=VARCHAR}, 
      #{c,jdbcType=VARCHAR}, #{d,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{right,jdbcType=INTEGER}, 
      #{wrong,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aurora.domain.QNA">
    insert into q&a
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="q != null">
        Q,
      </if>
      <if test="a != null">
        A,
      </if>
      <if test="b != null">
        B,
      </if>
      <if test="c != null">
        C,
      </if>
      <if test="d != null">
        D,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="right != null">
        right,
      </if>
      <if test="wrong != null">
        wrong,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="q != null">
        #{q,jdbcType=VARCHAR},
      </if>
      <if test="a != null">
        #{a,jdbcType=VARCHAR},
      </if>
      <if test="b != null">
        #{b,jdbcType=VARCHAR},
      </if>
      <if test="c != null">
        #{c,jdbcType=VARCHAR},
      </if>
      <if test="d != null">
        #{d,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="right != null">
        #{right,jdbcType=INTEGER},
      </if>
      <if test="wrong != null">
        #{wrong,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aurora.domain.QNA">
    update q&a
    <set>
      <if test="q != null">
        Q = #{q,jdbcType=VARCHAR},
      </if>
      <if test="a != null">
        A = #{a,jdbcType=VARCHAR},
      </if>
      <if test="b != null">
        B = #{b,jdbcType=VARCHAR},
      </if>
      <if test="c != null">
        C = #{c,jdbcType=VARCHAR},
      </if>
      <if test="d != null">
        D = #{d,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="right != null">
        right = #{right,jdbcType=INTEGER},
      </if>
      <if test="wrong != null">
        wrong = #{wrong,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aurora.domain.QNA">
    update q&a
    set Q = #{q,jdbcType=VARCHAR},
      A = #{a,jdbcType=VARCHAR},
      B = #{b,jdbcType=VARCHAR},
      C = #{c,jdbcType=VARCHAR},
      D = #{d,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      right = #{right,jdbcType=INTEGER},
      wrong = #{wrong,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>