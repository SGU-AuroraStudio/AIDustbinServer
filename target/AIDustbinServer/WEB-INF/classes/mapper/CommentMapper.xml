<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aurora.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.aurora.domain.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="from_user_id" jdbcType="VARCHAR" property="fromUserId" />
    <result column="moment_id" jdbcType="INTEGER" property="momentId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="to_comment_id" jdbcType="INTEGER" property="toCommentId" />
    <result column="comment_type" jdbcType="VARCHAR" property="commentType" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, from_user_id, moment_id, content, to_comment_id, comment_type, created_time, 
    deleted
  </sql>
  <select id="selectByExample" parameterType="com.aurora.domain.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.aurora.domain.Comment">
    insert into comment (id, from_user_id, moment_id, 
      content, to_comment_id, comment_type, 
      created_time, deleted)
    values (#{id,jdbcType=INTEGER}, #{fromUserId,jdbcType=VARCHAR}, #{momentId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{toCommentId,jdbcType=INTEGER}, #{commentType,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.aurora.domain.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="momentId != null">
        moment_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="toCommentId != null">
        to_comment_id,
      </if>
      <if test="commentType != null">
        comment_type,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="momentId != null">
        #{momentId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="toCommentId != null">
        #{toCommentId,jdbcType=INTEGER},
      </if>
      <if test="commentType != null">
        #{commentType,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aurora.domain.Comment">
    update comment
    <set>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="momentId != null">
        moment_id = #{momentId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="toCommentId != null">
        to_comment_id = #{toCommentId,jdbcType=INTEGER},
      </if>
      <if test="commentType != null">
        comment_type = #{commentType,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aurora.domain.Comment">
    update comment
    set from_user_id = #{fromUserId,jdbcType=VARCHAR},
      moment_id = #{momentId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      to_comment_id = #{toCommentId,jdbcType=INTEGER},
      comment_type = #{commentType,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateThisAndSonDeletedToTrue" parameterType="java.lang.Integer">
    UPDATE COMMENT SET `deleted`=1
    WHERE id IN
          (
            SELECT id
            FROM (
                   SELECT t1.id, IF(FIND_IN_SET(to_comment_id, @pids) > 0, @pids := CONCAT(@pids, ',', id), 0) AS ischild
                   FROM (SELECT id,to_comment_id FROM `comment` AS t) AS t1,
                        (SELECT @pids := #{id}, @pid:=@pids) AS t2
                 ) AS t3
            WHERE ischild != 0 OR id=@pid
          )
  </update>
</mapper>